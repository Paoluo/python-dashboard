Clonato da https://github.com/pplonski/python-dashboard

# Python Interactive window  https://code.visualstudio.com/docs/python/jupyter-support-py

URL da cui partire per demo e istruzioni: https://mljar.com/blog/python-dashboard/
URL per imparare Mercury (il convertitore di JPYNB in pagine web): https://mljar.com/mercury/


# Creazione Environment
virtualenv pdenv --python=python3.8

# STEP1. activate the env
source pdenv/bin/activate
# install all packages
pip install -r requirements.txt

# STEP2. The important step is to add our virtual environment as a kernel in the Jupyter Notebook:
python -m ipykernel install --user --name=pdenv
# After executing the above command, the pdenv will be available as a kernel in the Jupyter Notebook.

# All data will be fetched during notebook execution. Please start the Jupyter Notebook:
# STEP3. cliccando sul link si apre direttmente sul chrome della macchina host 
jupyter notebook --allow-root

# switchare il kernel sul notebook dopo l'apertura del pdenv.ipynb

# per notificare email sono stati posti valori di configurazione nel file .ENV


# STEP4. To see the notebook as a web application, you need to run the Mercury server. Please use the command:
mercury run

# Automaticamente crea le pagine web per i notebook file presenti nel folder corrente!!! E rende fruibile le app all'indirizzo http://127.0.0.1:8000/

# L'intestazione iniziale dei file fissa la configurazione YAML per il framework YAML che provvede a creare automaticamente le pagine web interattive e schedulate.

# Lasciate attive diverse dashboard per mercury:
# 1. dashboard - Dashboard originale con notifiche all'email personale, con Stock, Crypto e Meteo
# 2. (WIP) pdenv - dashboard da personalizzare con le Crypto di Binance preferite da monitorare.
#   2.1. Convertire il notebook in un gestore di un array di crypto valute da monitorare che poi convertite con Mercury consenta di scegliere quali monitorare puntualmente.
#   2.2. Possibilità di selezionare da una lista dinamica di crypto valute e non statica
#   2.3. Applicare algoritmo di valutazione quanto si rende potenzialmente utile acquistare o vendere.
#   2.4. Creare una struttura oggetto che contenga i dati da visualizzare nonchè i costrutti di funzione per il plotting in un approccio ad oggetti del dato
        - (WIP) Oggetto Crypto
            Attributes
            - data
            - crypto_symbol
            - interval
            - limit
            - date_creation
            - date_refresh
            Function:
            - (WIP) plot
            - (OK) subplot
            - plot_compare
            - (OK) refresh_data (riscarica dati aggiornati da Binance)
#   2.5 Creata lista di crypto tra symbol src e trg
#       - da introdurre utilizzo dinamico nella fasi successive
# 3. (TODO) meteo - dashboard per monitorare le condizioni meteo di diverse CITTA'
